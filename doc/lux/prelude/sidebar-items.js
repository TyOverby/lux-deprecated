initSidebarItems({"enum":[["LuxError","Any error that Lux might run into."]],"fn":[["hsv","Constructs a color from Hue, Saturation and Value components."],["hsva","Same as `hsv` but with an alpha component."],["rgb","Constructs a color from R, G, and B components."],["rgba","Constructs a color from R, G, B, and A components."]],"struct":[["EventIterator","An iterator for windowing events."],["Frame","A frame is a render target that can be drawn on."],["Window","A 1 to 1 correlation with a window shown on your desktop."]],"trait":[["Canvas","Canvas is the main trait for drawing in Lux.  It supports all operations that paint to the screen or to a buffer."],["Color","A `Color` is any object that can be converted to a length-4 array of f32s."],["Colored","A trait representing objects that can be colored with seperate fill colors and stroke colors."],["Interactive","A trait for objects that are interactive to the user. The only known impelementation for this trait is the glutin Window."],["IntoSprite","Implemented by any object that can be converted into a Sprite."],["TextureLoader","TextureLoader is implemented on any object that can load textures."],["Transform","A trait for objects that can be \"transformed\".  Transformations include scaling, translation, shearing, rotating, and general purpose matrix application."]],"type":[["LuxResult","A result returning either a value or a lux-generated error."]]});