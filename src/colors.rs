///! All of the wc3 named colors.

// Two bitcoins to the person that makes this file not look like utter garbage.
pub static ALICEBLUE: [f32, ..4] = [0xF0u8 as f32 / 255.0f32, 0xF8u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ANTIQUEWHITE: [f32, ..4] = [0xFAu8 as f32 / 255.0f32, 0xEBu8 as f32 / 255.0f32, 0xD7u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static AQUA: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static AQUAMARINE: [f32, ..4] = [0x7Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xD4u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static AZURE: [f32, ..4] = [0xF0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BEIGE: [f32, ..4] = [0xF5u8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xDCu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BISQUE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xE4u8 as f32 / 255.0f32, 0xC4u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BLACK: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BLANCHEDALMOND: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xEBu8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BLUE: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BLUEVIOLET: [f32, ..4] = [0x8Au8 as f32 / 255.0f32, 0x2Bu8 as f32 / 255.0f32, 0xE2u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BROWN: [f32, ..4] = [0xA5u8 as f32 / 255.0f32, 0x2Au8 as f32 / 255.0f32, 0x2Au8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static BURLYWOOD: [f32, ..4] = [0xDEu8 as f32 / 255.0f32, 0xB8u8 as f32 / 255.0f32, 0x87u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CADETBLUE: [f32, ..4] = [0x5Fu8 as f32 / 255.0f32, 0x9Eu8 as f32 / 255.0f32, 0xA0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CHARTREUSE: [f32, ..4] = [0x7Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CHOCOLATE: [f32, ..4] = [0xD2u8 as f32 / 255.0f32, 0x69u8 as f32 / 255.0f32, 0x1Eu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CORAL: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x7Fu8 as f32 / 255.0f32, 0x50u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CORNFLOWERBLUE: [f32, ..4] = [0x64u8 as f32 / 255.0f32, 0x95u8 as f32 / 255.0f32, 0xEDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CORNSILK: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xF8u8 as f32 / 255.0f32, 0xDCu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CRIMSON: [f32, ..4] = [0xDCu8 as f32 / 255.0f32, 0x14u8 as f32 / 255.0f32, 0x3Cu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static CYAN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKBLUE: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKCYAN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKGOLDENROD: [f32, ..4] = [0xB8u8 as f32 / 255.0f32, 0x86u8 as f32 / 255.0f32, 0x0Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKGRAY: [f32, ..4] = [0xA9u8 as f32 / 255.0f32, 0xA9u8 as f32 / 255.0f32, 0xA9u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKGREEN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x64u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKKHAKI: [f32, ..4] = [0xBDu8 as f32 / 255.0f32, 0xB7u8 as f32 / 255.0f32, 0x6Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKMAGENTA: [f32, ..4] = [0x8Bu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKOLIVEGREEN: [f32, ..4] = [0x55u8 as f32 / 255.0f32, 0x6Bu8 as f32 / 255.0f32, 0x2Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKORANGE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x8Cu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKORCHID: [f32, ..4] = [0x99u8 as f32 / 255.0f32, 0x32u8 as f32 / 255.0f32, 0xCCu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKRED: [f32, ..4] = [0x8Bu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKSALMON: [f32, ..4] = [0xE9u8 as f32 / 255.0f32, 0x96u8 as f32 / 255.0f32, 0x7Au8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKSEAGREEN: [f32, ..4] = [0x8Fu8 as f32 / 255.0f32, 0xBCu8 as f32 / 255.0f32, 0x8Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKSLATEBLUE: [f32, ..4] = [0x48u8 as f32 / 255.0f32, 0x3Du8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKSLATEGRAY: [f32, ..4] = [0x2Fu8 as f32 / 255.0f32, 0x4Fu8 as f32 / 255.0f32, 0x4Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKTURQUOISE: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xCEu8 as f32 / 255.0f32, 0xD1u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DARKVIOLET: [f32, ..4] = [0x94u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xD3u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DEEPPINK: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x14u8 as f32 / 255.0f32, 0x93u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DEEPSKYBLUE: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xBFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DIMGRAY: [f32, ..4] = [0x69u8 as f32 / 255.0f32, 0x69u8 as f32 / 255.0f32, 0x69u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static DODGERBLUE: [f32, ..4] = [0x1Eu8 as f32 / 255.0f32, 0x90u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static FIREBRICK: [f32, ..4] = [0xB2u8 as f32 / 255.0f32, 0x22u8 as f32 / 255.0f32, 0x22u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static FLORALWHITE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xF0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static FORESTGREEN: [f32, ..4] = [0x22u8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0x22u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static FUCHSIA: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GAINSBORO: [f32, ..4] = [0xDCu8 as f32 / 255.0f32, 0xDCu8 as f32 / 255.0f32, 0xDCu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GHOSTWHITE: [f32, ..4] = [0xF8u8 as f32 / 255.0f32, 0xF8u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GOLD: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xD7u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GOLDENROD: [f32, ..4] = [0xDAu8 as f32 / 255.0f32, 0xA5u8 as f32 / 255.0f32, 0x20u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GRAY: [f32, ..4] = [0x80u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GREEN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static GREENYELLOW: [f32, ..4] = [0xADu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0x2Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static HONEYDEW: [f32, ..4] = [0xF0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xF0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static HOTPINK: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x69u8 as f32 / 255.0f32, 0xB4u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static INDIANRED: [f32, ..4] = [0xCDu8 as f32 / 255.0f32, 0x5Cu8 as f32 / 255.0f32, 0x5Cu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static INDIGO: [f32, ..4] = [0x4Bu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x82u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static IVORY: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xF0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static KHAKI: [f32, ..4] = [0xF0u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0x8Cu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LAVENDER: [f32, ..4] = [0xE6u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LAVENDERBLUSH: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xF0u8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LAWNGREEN: [f32, ..4] = [0x7Cu8 as f32 / 255.0f32, 0xFCu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LEMONCHIFFON: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTBLUE: [f32, ..4] = [0xADu8 as f32 / 255.0f32, 0xD8u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTCORAL: [f32, ..4] = [0xF0u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTCYAN: [f32, ..4] = [0xE0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTGOLDENRODYELLOW: [f32, ..4] = [0xFAu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xD2u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTGREEN: [f32, ..4] = [0x90u8 as f32 / 255.0f32, 0xEEu8 as f32 / 255.0f32, 0x90u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTGREY: [f32, ..4] = [0xD3u8 as f32 / 255.0f32, 0xD3u8 as f32 / 255.0f32, 0xD3u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTPINK: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xB6u8 as f32 / 255.0f32, 0xC1u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTSALMON: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xA0u8 as f32 / 255.0f32, 0x7Au8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTSEAGREEN: [f32, ..4] = [0x20u8 as f32 / 255.0f32, 0xB2u8 as f32 / 255.0f32, 0xAAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTSKYBLUE: [f32, ..4] = [0x87u8 as f32 / 255.0f32, 0xCEu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTSLATEGRAY: [f32, ..4] = [0x77u8 as f32 / 255.0f32, 0x88u8 as f32 / 255.0f32, 0x99u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTSTEELBLUE: [f32, ..4] = [0xB0u8 as f32 / 255.0f32, 0xC4u8 as f32 / 255.0f32, 0xDEu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIGHTYELLOW: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xE0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIME: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LIMEGREEN: [f32, ..4] = [0x32u8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0x32u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static LINEN: [f32, ..4] = [0xFAu8 as f32 / 255.0f32, 0xF0u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MAGENTA: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MAROON: [f32, ..4] = [0x80u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMAQUAMARINE: [f32, ..4] = [0x66u8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0xAAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMBLUE: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMORCHID: [f32, ..4] = [0xBAu8 as f32 / 255.0f32, 0x55u8 as f32 / 255.0f32, 0xD3u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMPURPLE: [f32, ..4] = [0x93u8 as f32 / 255.0f32, 0x70u8 as f32 / 255.0f32, 0xDBu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMSEAGREEN: [f32, ..4] = [0x3Cu8 as f32 / 255.0f32, 0xB3u8 as f32 / 255.0f32, 0x71u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMSLATEBLUE: [f32, ..4] = [0x7Bu8 as f32 / 255.0f32, 0x68u8 as f32 / 255.0f32, 0xEEu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMSPRINGGREEN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0x9Au8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMTURQUOISE: [f32, ..4] = [0x48u8 as f32 / 255.0f32, 0xD1u8 as f32 / 255.0f32, 0xCCu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MEDIUMVIOLETRED: [f32, ..4] = [0xC7u8 as f32 / 255.0f32, 0x15u8 as f32 / 255.0f32, 0x85u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MIDNIGHTBLUE: [f32, ..4] = [0x19u8 as f32 / 255.0f32, 0x19u8 as f32 / 255.0f32, 0x70u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MINTCREAM: [f32, ..4] = [0xF5u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MISTYROSE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xE4u8 as f32 / 255.0f32, 0xE1u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static MOCCASIN: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xE4u8 as f32 / 255.0f32, 0xB5u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static NAVAJOWHITE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xDEu8 as f32 / 255.0f32, 0xADu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static NAVY: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static OLDLACE: [f32, ..4] = [0xFDu8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static OLIVE: [f32, ..4] = [0x80u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static OLIVEDRAB: [f32, ..4] = [0x6Bu8 as f32 / 255.0f32, 0x8Eu8 as f32 / 255.0f32, 0x23u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ORANGE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xA5u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ORANGERED: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x45u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ORCHID: [f32, ..4] = [0xDAu8 as f32 / 255.0f32, 0x70u8 as f32 / 255.0f32, 0xD6u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PALEGOLDENROD: [f32, ..4] = [0xEEu8 as f32 / 255.0f32, 0xE8u8 as f32 / 255.0f32, 0xAAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PALEGREEN: [f32, ..4] = [0x98u8 as f32 / 255.0f32, 0xFBu8 as f32 / 255.0f32, 0x98u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PALEVIOLETRED: [f32, ..4] = [0xDBu8 as f32 / 255.0f32, 0x70u8 as f32 / 255.0f32, 0x93u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PAPAYAWHIP: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xEFu8 as f32 / 255.0f32, 0xD5u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PEACHPUFF: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xDAu8 as f32 / 255.0f32, 0xB9u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PERU: [f32, ..4] = [0xCDu8 as f32 / 255.0f32, 0x85u8 as f32 / 255.0f32, 0x3Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PINK: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xC0u8 as f32 / 255.0f32, 0xCBu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PLUM: [f32, ..4] = [0xDDu8 as f32 / 255.0f32, 0xA0u8 as f32 / 255.0f32, 0xDDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static POWDERBLUE: [f32, ..4] = [0xB0u8 as f32 / 255.0f32, 0xE0u8 as f32 / 255.0f32, 0xE6u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static PURPLE: [f32, ..4] = [0x80u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static RED: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ROSYBROWN: [f32, ..4] = [0xBCu8 as f32 / 255.0f32, 0x8Fu8 as f32 / 255.0f32, 0x8Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static ROYALBLUE: [f32, ..4] = [0x41u8 as f32 / 255.0f32, 0x69u8 as f32 / 255.0f32, 0xE1u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SADDLEBROWN: [f32, ..4] = [0x8Bu8 as f32 / 255.0f32, 0x45u8 as f32 / 255.0f32, 0x13u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SALMON: [f32, ..4] = [0xFAu8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x72u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SANDYBROWN: [f32, ..4] = [0xFAu8 as f32 / 255.0f32, 0xA4u8 as f32 / 255.0f32, 0x60u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SEAGREEN: [f32, ..4] = [0x2Eu8 as f32 / 255.0f32, 0x8Bu8 as f32 / 255.0f32, 0x57u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SEASHELL: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xEEu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SIENNA: [f32, ..4] = [0xA0u8 as f32 / 255.0f32, 0x52u8 as f32 / 255.0f32, 0x2Du8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SILVER: [f32, ..4] = [0xC0u8 as f32 / 255.0f32, 0xC0u8 as f32 / 255.0f32, 0xC0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SKYBLUE: [f32, ..4] = [0x87u8 as f32 / 255.0f32, 0xCEu8 as f32 / 255.0f32, 0xEBu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SLATEBLUE: [f32, ..4] = [0x6Au8 as f32 / 255.0f32, 0x5Au8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SLATEGRAY: [f32, ..4] = [0x70u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x90u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SNOW: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xFAu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static SPRINGGREEN: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0x7Fu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static STEELBLUE: [f32, ..4] = [0x46u8 as f32 / 255.0f32, 0x82u8 as f32 / 255.0f32, 0xB4u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static TAN: [f32, ..4] = [0xD2u8 as f32 / 255.0f32, 0xB4u8 as f32 / 255.0f32, 0x8Cu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static TEAL: [f32, ..4] = [0x00u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0x80u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static THISTLE: [f32, ..4] = [0xD8u8 as f32 / 255.0f32, 0xBFu8 as f32 / 255.0f32, 0xD8u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static TOMATO: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0x63u8 as f32 / 255.0f32, 0x47u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static TURQUOISE: [f32, ..4] = [0x40u8 as f32 / 255.0f32, 0xE0u8 as f32 / 255.0f32, 0xD0u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static VIOLET: [f32, ..4] = [0xEEu8 as f32 / 255.0f32, 0x82u8 as f32 / 255.0f32, 0xEEu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static WHEAT: [f32, ..4] = [0xF5u8 as f32 / 255.0f32, 0xDEu8 as f32 / 255.0f32, 0xB3u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static WHITE: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static WHITESMOKE: [f32, ..4] = [0xF5u8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xF5u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static YELLOW: [f32, ..4] = [0xFFu8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32, 0x00u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
pub static YELLOWGREEN: [f32, ..4] = [0x9Au8 as f32 / 255.0f32, 0xCDu8 as f32 / 255.0f32, 0x32u8 as f32 / 255.0f32, 0xFFu8 as f32 / 255.0f32];
